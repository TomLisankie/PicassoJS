{"version":3,"sources":["webpack/bootstrap 62e7c87e6139efb9fcb7","./lib/voronoi.js","./lib/cell.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;;AAEA,4BAA2B,4CAA4C;AACvE;AACA,EAAC;;;;;;;ACRD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 62e7c87e6139efb9fcb7","const Cell = require('./cell');\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const root = document.getElementById('canvas');\n  const ctx = root.getContext('2d');\n\n  let testCell = new Cell({vertices: [[0,0], [0,100], [50,50], [50,0]]});\n  testCell.draw(ctx)\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/voronoi.js\n// module id = 0\n// module chunks = 0","class Cell {\n  constructor(options) {\n    this.vertices = options.vertices;\n    this.color = options.color;\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.moveTo(0,0);\n    this.vertices.forEach((point) => {\n      ctx.lineTo(...point);\n    });\n    ctx.closePath();\n    ctx.fill();\n  }\n}\n\nmodule.exports = Cell;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/cell.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}